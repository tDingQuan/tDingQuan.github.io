<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用 WinSCP 远程连接主机教程</title>
      <link href="2021-03-26/winscp-tutorial/"/>
      <url>2021-03-26/winscp-tutorial/</url>
      
        <content type="html"><![CDATA[<h1 id="WinSCP-安装"><a href="#WinSCP-安装" class="headerlink" title="WinSCP 安装"></a>WinSCP 安装</h1><p>官方安装地址：<a href="https://winscp.net/eng/download.php">下载链接</a></p><p>官方文档地址：<a href="https://winscp.net/eng/docs/after_installation?ver=5.17.10&amp;lang=chs&amp;utm_source=winscp&amp;utm_medium=setup&amp;utm_campaign=5.17.10&amp;prevver=5.17.10.11087&amp;automatic=0">文档链接</a></p><h1 id="WinSCP-使用"><a href="#WinSCP-使用" class="headerlink" title="WinSCP 使用"></a>WinSCP 使用</h1><ol><li><p>建议安装时选择<code>为所用用户安装</code>。</p></li><li><p>打开软件界面，更改文件协议为SCP（或者其他协议），在“主机名”处填写主机URL，“用户名”和“密码”填写登录账号和密码，点击“登录”按钮。</p></li></ol><ul><li>如果弹出名为“认证栏：出于安全考虑…”的对话框，点击“继续”按钮即可连接。</li></ul><p><img src="/2021-03-26/winscp-tutorial/1.png" alt="软件界面"></p><h1 id="一些小Tips"><a href="#一些小Tips" class="headerlink" title="一些小Tips"></a>一些小Tips</h1><ul><li>删除单个文件可以使用WinSCP，删除目录不要使用，效率低。</li><li>可以在右侧文件栏（服务器目录）和左侧文件栏（本地目录）之间使用拖拽，进行上传/下载操作。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Tool </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WinSCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2103 LeetCode</title>
      <link href="2021-03-08/2103-leetcode/"/>
      <url>2021-03-08/2103-leetcode/</url>
      
        <content type="html"><![CDATA[<h4 id="1-303-区域和检索-数组不可变"><a href="#1-303-区域和检索-数组不可变" class="headerlink" title="1. 303 - 区域和检索 - 数组不可变"></a>1. <a href="https://leetcode-cn.com/problems/range-sum-query-immutable">303 - 区域和检索 - 数组不可变</a></h4><ul><li>前缀和</li><li>注意数组首元素是否为0时，具有不同的含义，有时可以为计算带来简便</li><li>重复调用时，可以使用懒计算</li></ul><h4 id="2-304-二维区域和检索-矩阵不可变"><a href="#2-304-二维区域和检索-矩阵不可变" class="headerlink" title="2. 304 - 二维区域和检索 - 矩阵不可变"></a>2. <a href="https://leetcode-cn.com/problems/range-sum-query-2d-immutable/">304 - 二维区域和检索 - 矩阵不可变</a></h4><ul><li>python 二维数组初始化时，避免浅拷贝，数组引用会带来值修改问题<pre class="line-numbers language-python" data-language="python"><code class="language-python">g <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">]</span> <span class="token operator">*</span> n <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>快速子矩阵求和与 DP 的二维数组含义的配合</li></ul><h4 id="3-338-比特位计数"><a href="#3-338-比特位计数" class="headerlink" title="3. 338 - 比特位计数"></a>3. <a href="https://leetcode-cn.com/problems/counting-bits/">338 - 比特位计数</a></h4><ul><li>位运算计算的奇技淫巧：与 DP 结合快速计算数字二进制形式 1 的个数<pre class="line-numbers language-python" data-language="python"><code class="language-python">bits<span class="token punctuation">.</span>append<span class="token punctuation">(</span>bits<span class="token punctuation">[</span>i <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="4-354-俄罗斯套娃信封问题"><a href="#4-354-俄罗斯套娃信封问题" class="headerlink" title="4. 354 - 俄罗斯套娃信封问题"></a>4. <a href="https://leetcode-cn.com/problems/russian-doll-envelopes/">354 - 俄罗斯套娃信封问题</a></h4><ul><li>题目要求严格大于，在进行预排序的时候，第一维升维，第二维降维</li><li>python 排序<pre class="line-numbers language-python" data-language="python"><code class="language-python">envelopes<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="5-232-用栈实现队列"><a href="#5-232-用栈实现队列" class="headerlink" title="5. 232 - 用栈实现队列"></a>5. <a href="https://leetcode-cn.com/problems/implement-queue-using-stacks">232 - 用栈实现队列</a></h4><ul><li>摊销复杂度 【最近总遇到摊销两字，看论文的时候“摊销因果发现”】</li><li>只在pop栈出队列为空的时候进行转移</li></ul><h4 id="6-503-下一个更大元素-II"><a href="#6-503-下一个更大元素-II" class="headerlink" title="6. 503 - 下一个更大元素 II"></a>6. <a href="https://leetcode-cn.com/problems/next-greater-element-ii">503 - 下一个更大元素 II</a></h4><ul><li>使用栈只保留index，不用存具体数据</li><li>单调栈应用在找寻循环数组的下一个更大元素</li></ul><h4 id="7-131-分割回文串"><a href="#7-131-分割回文串" class="headerlink" title="7. 131 - 分割回文串"></a>7. <a href="https://leetcode-cn.com/problems/palindrome-partitioning/">131 - 分割回文串</a></h4><ul><li>DP + 深搜 基础题</li><li>初始化 map 为全 True 和 全 False 在后续初始化中具有很大   区别<ul><li>如果初始化为全 False<ul><li>计算长度为 1 的</li><li>计算长度为 2 的</li><li>计算长度更长的序列时候，range的起始为 2；if 的判断条件有 3 个 【防溢出，首尾字母，中间字符串】<pre class="line-numbers language-python" data-language="python"><code class="language-python">_map <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    _map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> s<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        _map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">+</span> j <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">and</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> s<span class="token punctuation">[</span>i<span class="token operator">+</span>j<span class="token punctuation">]</span> <span class="token keyword">and</span> _map<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">+</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            _map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">+</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li>如果初始化为全 True<ul><li>计算长度为 1 的</li><li>计算更长长度的字符串的时候，可以倒序计算；长度为 2 的情况因为初始化为 True 不需要单独列出<pre class="line-numbers language-python" data-language="python"><code class="language-python">g <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">]</span> <span class="token operator">*</span> n <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>        g<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> g<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li></ul><h4 id="8-132-分割回文串-II"><a href="#8-132-分割回文串-II" class="headerlink" title="8. 132 - 分割回文串 II"></a>8. <a href="https://leetcode-cn.com/problems/palindrome-partitioning-ii">132 - 分割回文串 II</a></h4><ul><li>考虑清楚第二次 DP 的表的物理含义，不用深搜，否则超时<ul><li>前 i 个字符最多需要分割多少次得到回文串子集</li></ul></li><li>初始化时注意观察整个字符串是不是回文串</li><li>初始化为最大值<pre class="line-numbers language-python" data-language="python"><code class="language-python">f <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">"inf"</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">*</span> n<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Summary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Towards Causal Representation Learning</title>
      <link href="2021-03-05/towards-causal-representation-learning/"/>
      <url>2021-03-05/towards-causal-representation-learning/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Paper Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Representation Learning </tag>
            
            <tag> Causality </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Hello World</title>
      <link href="2021-03-04/hello-world/"/>
      <url>2021-03-04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="Insert-pictures"><a href="#Insert-pictures" class="headerlink" title="Insert pictures"></a>Insert pictures</h3><ol><li><p>安装 <code>hexo-asset-image</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-asset-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>更新 <code>_config.yaml</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">post_asset_folder: <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>更新 <code>node_modules</code> 中的代码，详情请见链接</p></li><li><p>使用 <code>create</code> 命令时自动创建同名文件夹用于存储图片</p></li></ol><p>More info: <a href="https://www.jianshu.com/p/f72aaad7b852">Pictures</a></p>]]></content>
      
      
      <categories>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
