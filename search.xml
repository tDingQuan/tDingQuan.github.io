<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>二分查找专题</title>
      <link href="2021-05-23/er-fen-cha-zhao-zhuan-ti/"/>
      <url>2021-05-23/er-fen-cha-zhao-zhuan-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h1><h2 id="算法流程"><a href="#算法流程" class="headerlink" title="算法流程"></a>算法流程</h2><ol><li>预处理 —— 数据未排序，先进行排序；</li><li>二分查找 —— 递归进行查找空间的对半划分；</li><li>后处理 —— 在剩余空间中进行选择。</li></ol><h2 id="算法模板"><a href="#算法模板" class="headerlink" title="算法模板"></a>算法模板</h2><h3 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h3><ol><li>mid 的计算问题</li></ol><ul><li>不会超过int上限<pre class="line-numbers language-python" data-language="python"><code class="language-python">mid <span class="token operator">=</span> <span class="token punctuation">(</span>right<span class="token operator">-</span>left<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span> <span class="token operator">+</span> left<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="模板一"><a href="#模板一" class="headerlink" title="模板一"></a>模板一</h3><h4 id="使用条件"><a href="#使用条件" class="headerlink" title="使用条件"></a>使用条件</h4><ul><li>查找可以通过访问数组中单个索引来确定的元素或者条件；</li><li>使用中间元素判断向左还是向右；</li><li>无后处理。</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span>nums<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">,</span> target<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>    left<span class="token punctuation">,</span> right <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>    <span class="token keyword">while</span> left <span class="token operator">&lt;=</span> right<span class="token punctuation">:</span>        mid <span class="token operator">=</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span> <span class="token operator">+</span> left        <span class="token keyword">if</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">:</span>            <span class="token keyword">return</span> mid        <span class="token keyword">elif</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">:</span>            left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>        <span class="token keyword">elif</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">:</span>            right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h4><ol><li><p><a href="https://leetcode-cn.com/problems/binary-search/">704. 二分查找</a></p></li><li><p><a href="https://leetcode-cn.com/problems/guess-number-higher-or-lower/">374. 猜数字大小</a></p></li></ol><h3 id="模板二"><a href="#模板二" class="headerlink" title="模板二"></a>模板二</h3><h4 id="使用条件-1"><a href="#使用条件-1" class="headerlink" title="使用条件"></a>使用条件</h4><ul><li>查找需要访问数组中当前索引及其右邻居索引的元素或条件；</li><li>使用中间元素的右邻居判断向左还是向右；</li><li>保证查找空间每一步至少有两个元素；</li><li>需要进行后处理。</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span>nums<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">,</span> target<span class="token punctuation">:</span> mid<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>    left<span class="token punctuation">,</span> right <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>    <span class="token keyword">while</span> left <span class="token operator">&lt;</span> right<span class="token punctuation">:</span>        mid <span class="token operator">=</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span> <span class="token operator">+</span> left        <span class="token keyword">if</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">:</span>            <span class="token keyword">return</span> mid        <span class="token keyword">elif</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">:</span>            left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            right <span class="token operator">=</span> mid    <span class="token keyword">if</span> left <span class="token operator">!=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token keyword">and</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">:</span>        <span class="token keyword">return</span> left    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="题目链接-1"><a href="#题目链接-1" class="headerlink" title="题目链接"></a>题目链接</h4><p>1. </p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器Nginx配置教程</title>
      <link href="2021-05-17/fu-wu-qi-nginx-pei-zhi-jiao-cheng/"/>
      <url>2021-05-17/fu-wu-qi-nginx-pei-zhi-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是-Nginx"><a href="#什么是-Nginx" class="headerlink" title="什么是 Nginx?"></a>什么是 Nginx?</h1><h1 id="Nginx-的安装"><a href="#Nginx-的安装" class="headerlink" title="Nginx 的安装"></a>Nginx 的安装</h1><ul><li>服务器环境：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">CentOS <span class="token number">7.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li>准备工作</li></ol><ul><li><code>SSL</code> 功能安装 <code>openssl</code> 库:</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> openssl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>gzip</code> 模块需要 <code>zlib</code> 库：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> zlib<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>rewrite</code> 模块安装 <code>pcre</code> 库：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> pcre<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>安装 Nginx 依赖项和 Nginx</li></ol><ul><li>安装 Nginx 需要的库 [此处注意下载链接的有效性]</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rpm</span> -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>安装 Nginx：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>启动 Nginx：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> nginx start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>测试 Nginx 的有效性：浏览器访问本地/服务器端口，如下表示安装成功：</li></ol><ul><li>服务器端注意开放 80 端口。</li></ul><p><img src="/2021-05-17/fu-wu-qi-nginx-pei-zhi-jiao-cheng/success.png" alt="正确启动Nginx的界面"></p><ol start="4"><li>配置 Nginx 的文件位于：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/etc/nginx/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h1><ol><li><p>缺省配置：<code>http -&gt; server -&gt; location</code>，内层块自动继承外层块的内容。</p></li><li><p><code>http</code> 层次：<code>/etc/nginx/nginx.conf</code></p></li></ol><ul><li><code>include</code> 语句指明了下级配置文件的路径：当需要处理的 <code>server</code> 超过 2 个时，建议将不同虚拟机的配置放在不同文件中，通过在主配置文件的 <code>include</code> 指令进行选择。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http <span class="token punctuation">{</span>    <span class="token punctuation">..</span>. <span class="token punctuation">..</span>.    include /etc/nginx/conf.d/*.conf<span class="token punctuation">;</span>    <span class="token comment"># include /etc/nginx/[name]/*.conf</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><code>server</code> 层次：<code>/etc/nginx/conf.d/default.conf</code></li></ol><ul><li>在 <code>url/ip</code> 层次对发送的请求进行后端服务器的转发；</li><li>通过构建虚拟主机(server)的概念，用 <code>server_name</code> 对服务进行配置隔离；</li><li><code>listen</code> 用于确定监听的端口；</li><li>对应于同一规则的多个域名可以使用空格进行分离。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server <span class="token punctuation">{</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>    server_name  demo.tdingquan.top<span class="token punctuation">;</span>    access_log  /var/log/nginx/host.access.log  main<span class="token punctuation">;</span>    <span class="token punctuation">..</span>. <span class="token punctuation">..</span>.<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li><code>location</code> 层次：<code>/etc/nginx/conf.d/default.conf</code>，包含在 <code>server</code> 内</li></ol><ul><li>每个 <code>url/ip</code> 对应于一个服务，Nginx 对服务进行处理转发，转发路径通过 <code>location</code> 指定；</li><li><code>server</code> 是对域名的指定，<code>location</code> 是对访问内容的指定；</li><li><code>index</code> 用于设定访问的默认首页地址；</li><li><code>root</code> 用于指定访问的根目录。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server <span class="token punctuation">{</span>    <span class="token punctuation">..</span>. <span class="token punctuation">..</span>.    location / <span class="token punctuation">{</span>        root   /root/BoxEViz<span class="token punctuation">;</span>        index  main.html index.html index.htm<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>location</code> 匹配规则：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~ 表示执行一个正则匹配，区分大小写；~* 表示执行一个正则匹配，不区分大小写；^~ 表示普通字符匹配<span class="token operator">=</span> 表示普通字符精确匹配<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="高级配置"><a href="#高级配置" class="headerlink" title="高级配置"></a>高级配置</h1><ol><li>服务转发</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">location / <span class="token punctuation">{</span>  proxy_pass <span class="token punctuation">[</span>url<span class="token punctuation">]</span>:<span class="token punctuation">[</span>port<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="2"><li>负载均衡</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">upstream myserver<span class="token punctuation">;</span> <span class="token punctuation">{</span>    ip_hash<span class="token punctuation">;</span>    server <span class="token number">172.16</span>.1.1:8001<span class="token punctuation">;</span>    server <span class="token number">172.16</span>.1.2:8002<span class="token punctuation">;</span>    server <span class="token number">172.16</span>.1.3<span class="token punctuation">;</span>    server <span class="token number">172.16</span>.1.4<span class="token punctuation">;</span><span class="token punctuation">}</span>location / <span class="token punctuation">{</span>    proxy_pass http://myserver<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Nginx-配置文件正确性验证"><a href="#Nginx-配置文件正确性验证" class="headerlink" title="Nginx 配置文件正确性验证"></a>Nginx 配置文件正确性验证</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nginx -tnginx -tc <span class="token punctuation">[</span>config_file_address<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><ol><li>访问主页时，控制台报错：”403”；查看日志：<code>open() "/data/www/1.txt" failed (13: Permission denied) ...</code></li></ol><ul><li>检查 Nginx 的启动用户：<code>/etc/nginx/nginx.conf</code></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">user root<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Engineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树专题</title>
      <link href="2021-05-17/shu-zhuan-ti/"/>
      <url>2021-05-17/shu-zhuan-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="Hard"><a href="#Hard" class="headerlink" title="Hard"></a>Hard</h1><h1 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h1><h1 id="Easy"><a href="#Easy" class="headerlink" title="Easy"></a>Easy</h1><h4 id="1-993-二叉树的堂兄弟节点"><a href="#1-993-二叉树的堂兄弟节点" class="headerlink" title="1. 993 - 二叉树的堂兄弟节点"></a>1. <a href="https://leetcode-cn.com/problems/cousins-in-binary-tree/">993 - 二叉树的堂兄弟节点</a></h4><ul><li>堂兄弟节点定义为：父节点不同，深度相同的节点</li><li>层次遍历</li><li>判断每个节点的子节点是否满足查询的数字</li></ul>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode 刷题目录</title>
      <link href="2021-04-10/leetcode-shua-ti-mu-lu/"/>
      <url>2021-04-10/leetcode-shua-ti-mu-lu/</url>
      
        <content type="html"><![CDATA[<p>131 - 分割回文串: <a href="/2021-03-08/2103-leetcode/" title="2103 LeetCode">2103 LeetCode</a></p><p>132 - 分割回文串 II: <a href="/2021-03-08/2103-leetcode/" title="2103 LeetCode">2103 LeetCode</a></p><p>232 - 用栈实现队列: <a href="/2021-03-08/2103-leetcode/" title="2103 LeetCode">2103 LeetCode</a></p><p>303 - 区域和检索 - 数组不可变: <a href="/2021-03-08/2103-leetcode/" title="2103 LeetCode">2103 LeetCode</a></p><p>304 - 二维区域和检索 - 矩阵不可变: <a href="/2021-03-08/2103-leetcode/" title="2103 LeetCode">2103 LeetCode</a></p><p>338 - 比特位计数: <a href="/2021-03-08/2103-leetcode/" title="2103 LeetCode">2103 LeetCode</a></p><p>354 - 俄罗斯套娃信封问题: <a href="/2021-03-08/2103-leetcode/" title="2103 LeetCode">2103 LeetCode</a></p><p>503 - 下一个更大元素 II: <a href="/2021-03-08/2103-leetcode/" title="2103 LeetCode">2103 LeetCode</a></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matplotlib 基础知识</title>
      <link href="2021-04-09/matplotlib-ji-chu-zhi-shi/"/>
      <url>2021-04-09/matplotlib-ji-chu-zhi-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="数据格式"><a href="#数据格式" class="headerlink" title="数据格式"></a>数据格式</h3><p><code>matplotlib</code> 接受 <code>numpy.array</code> 的数据格式进行绘制。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="调用风格"><a href="#调用风格" class="headerlink" title="调用风格"></a>调用风格</h3><ol><li>类似<code>matlab</code>风格，调用 <code>plt</code> 的函数进行绘制，作用于当前的 <code>axes</code> 对象上。<ul><li>适用于交互编程，如 <code>jupyter-notebook</code>。</li></ul></li><li>面向对象 (OO) 风格，调用 <code>Axes</code> 的函数进行绘制，作用于调用函数的 <code>axes</code> 对象上。<ul><li>适用于非交互编程，函数复用的场景。</li></ul></li></ol><h3 id="基本概念-1"><a href="#基本概念-1" class="headerlink" title="基本概念"></a>基本概念</h3><p><img src="/2021-04-09/matplotlib-ji-chu-zhi-shi/elements.png" alt="参与绘图的主要元素"></p><ol><li><code>Canvas</code></li></ol><ul><li>实际进行绘图的对象，对用户隐藏。</li></ul><ol start="2"><li><code>Figure</code></li></ol><ul><li>类似绘图时使用的画布。</li></ul><ol start="3"><li><code>Axes</code></li></ol><ul><li>类似绘图时使用的画笔。</li><li>一个 <code>Figure</code> 对象可以有很多个 <code>Axes</code>，但每个 <code>Axes</code> 只能从属于一个 <code>Figure</code>。</li><li>具有多个 <code>Axis</code> 对象，即图上的坐标轴。</li><li>函数接口包括：<code>set_xlim</code>,<code>set_ylim</code>,<code>set_title</code>,<code>set_xlabel</code>,<code>set_ylabel</code> 等。</li></ul><ol start="4"><li><code>Axis</code></li></ol><ul><li>图上的坐标轴，管理轴上的刻度和刻度名称。</li><li>通过 <code>Locator</code> 和 <code>Formator</code> 控制名称的位置和格式。</li></ul><ol start="5"><li><code>Artist</code></li></ol><ul><li>每个绘制对象都是一个<code>Artist</code>对象，从属于一个<code>Axes</code>对象。</li></ul><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><h3 id="交互模式与非交互模式"><a href="#交互模式与非交互模式" class="headerlink" title="交互模式与非交互模式"></a>交互模式与非交互模式</h3><ul><li>交互模式即时更新图像。</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>ion<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>非交互模式调用 <code>show</code> 一次性绘制所有对象。<ul><li>阻塞进程，直到手动关闭绘制的图像窗口。</li></ul></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>ioff<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Engineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Matplotlib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch 编程的一些坑</title>
      <link href="2021-04-05/pytorch-bian-cheng-de-yi-xie-keng/"/>
      <url>2021-04-05/pytorch-bian-cheng-de-yi-xie-keng/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token punctuation">.</span>tensor <span class="token keyword">as</span> Tensortensor <span class="token operator">=</span> Tensor<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="数据复制"><a href="#数据复制" class="headerlink" title="数据复制"></a>数据复制</h2><h3 id="tensor对象与numpy对象的数据转换"><a href="#tensor对象与numpy对象的数据转换" class="headerlink" title="tensor对象与numpy对象的数据转换"></a><code>tensor</code>对象与<code>numpy</code>对象的数据转换</h3><ol><li><p>共享内存：</p><ul><li><code>tensor</code> -&gt; <code>numpy</code>: <code>tensor.numpy()</code></li><li><code>numpy</code> -&gt; <code>tensor</code>: <code>Tensor.from_numpy()</code></li></ul></li><li><p>不共享内存：</p><ul><li><code>tensor</code> -&gt; <code>numpy</code>: <code>tensor.clone().numpy()</code></li><li><code>numpy</code> -&gt; <code>tensor</code>: <code>tensor.from_numpy(array.copy())</code></li></ul></li></ol><h3 id="tensor-对象之间的复制"><a href="#tensor-对象之间的复制" class="headerlink" title="tensor 对象之间的复制"></a><code>tensor</code> 对象之间的复制</h3><ol><li>共享内存：<code>tensor.detach()</code>，从计算图中分离，不计算梯度</li><li>不共享内存：<code>tensor.clone()</code>，是否计算梯度，看原 <code>tensor</code> 的配置</li><li><strong>Deprecated</strong> 不共享内存：<code>tensor()</code>，是否计算梯度，看构造函数的传参</li></ol><h3 id="cpu-向-gpu-的转换"><a href="#cpu-向-gpu-的转换" class="headerlink" title="cpu 向 gpu 的转换"></a><code>cpu</code> 向 <code>gpu</code> 的转换</h3><ul><li>拷贝到 GPU：<code>tensor.cuda()</code></li><li>转换到 GPU：<code>tensor.to()</code></li></ul><h2 id="Tensor类与tensor对象的操作"><a href="#Tensor类与tensor对象的操作" class="headerlink" title="Tensor类与tensor对象的操作"></a><code>Tensor</code>类与<code>tensor</code>对象的操作</h2><h3 id="从tensor中获取元素"><a href="#从tensor中获取元素" class="headerlink" title="从tensor中获取元素"></a>从<code>tensor</code>中获取元素</h3><ol><li>下标访问得到一个 <code>0-dim</code> 的 <code>scalar</code></li><li>使用下标访问 + <code>item()</code> 得到元素的值</li><li>单元素 <code>tensor</code> 也可以使用 <code>item()</code></li></ol><h3 id="整数类型除法"><a href="#整数类型除法" class="headerlink" title="整数类型除法"></a>整数类型除法</h3><p>计算数据类型为 <code>Tensor.uint8, Tensor.int8, Tensor.int16, Tensor.int32, Tensor.int64</code> 或者张量类型为 <code>Tensor.CharTensor, Tensor.ShortTensor, Tensor.IntTensor, Tensor.LongTensor</code> 的浮点数类型除法时，使用 <code>Tensor.true_divide(tensor1, tensor2)</code></p><h3 id="Tensor-构造的-Tensor-Size-问题"><a href="#Tensor-构造的-Tensor-Size-问题" class="headerlink" title="Tensor 构造的 Tensor.Size 问题"></a><code>Tensor</code> 构造的 <code>Tensor.Size</code> 问题</h3><ol><li><code>Tensor.tensor(3.14159) </code>, size: <code>torch.Size([])</code> ~ <code>scalar</code> 单元素 <code>tensor</code></li><li><code>Tensor.tensor([])</code>, size: <code>torch.Size([0])</code> ~ 空</li><li><code>Tensor.tensor([1, 2])</code>, size: <code>torch.Size([2])</code> ~ <code>tensor</code></li><li><code>Tensor.Tensor(1, 2)</code>, size: <code>torch.Size([1, 2])</code> ~ 规定<code>tensor</code>大小的初始化方式</li></ol><p>综合，传入一个<code>list</code>，两种构造方法都是将<code>list</code>转换成一个<code>tensor</code>；<br>传入数字，<code>Tensor.tensor</code>只接受单个数字用于构造<code>scalar</code>，<code>Tensor.Tensor</code>用于构造对应大小<code>Tensor</code></p><h3 id="tensor-的大小改变"><a href="#tensor-的大小改变" class="headerlink" title="tensor 的大小改变"></a><code>tensor</code> 的大小改变</h3><ol><li><code>tensor.view()</code> 创造一个共享内存的新 tensor</li><li><code>tensor.squeeze(), tensor.unsqueeze()</code> 减少、添加一个维度，创造一个共享内存的新 tensor</li><li><code>tensor.resize()</code> 如果新分配空间大小小于原空间，保留数据不删除</li></ol><h3 id="tensor-的索引"><a href="#tensor-的索引" class="headerlink" title="tensor 的索引"></a><code>tensor</code> 的索引</h3><ol><li><p><code>tensor[0:1, :2]</code>, size: <code>torch.Size([1, 2])</code>; <code>tensor[0, :2]</code>, size: <code>torch.Size([2])</code></p></li><li><p><code>None</code> 相当于 <code>np.newaxis</code>，新增一个轴：<code>tensor[None].shape</code>, size: <code>torch.Size([1, 10])</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Engineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Collections, the Container datatypes</title>
      <link href="2021-04-04/collections-the-container-datatypes/"/>
      <url>2021-04-04/collections-the-container-datatypes/</url>
      
        <content type="html"><![CDATA[<h4 id="1-Counter"><a href="#1-Counter" class="headerlink" title="1. Counter"></a>1. Counter</h4><p>如名字，<code>Counter</code>类用于提供一个方便的计数器</p><ul><li>构造函数<br>支持传入 <code>iterable</code> 或者 <code>mappings</code> 类型的对象进行初始化，最常用传入一个 <code>list</code></li><li><code>elements()</code><br>返回一个迭代器，包含所有计数大于 0 的元素，每个元素出现的次数为他的计数</li><li><code>most_common([n])</code><br>返回前<code>n</code>个最频繁出现的元素</li><li>支持 <code>dict</code>的函数</li></ul>]]></content>
      
      
      <categories>
          
          <category> Engineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2104-LeetCode</title>
      <link href="2021-04-04/2104-leetcode/"/>
      <url>2021-04-04/2104-leetcode/</url>
      
        <content type="html"><![CDATA[<h4 id="1-781-森林中的兔子"><a href="#1-781-森林中的兔子" class="headerlink" title="1. 781 - 森林中的兔子"></a>1. <a href="https://leetcode-cn.com/problems/rabbits-in-forest/">781 - 森林中的兔子</a></h4><ul><li><p>好像这个题目是华为今年的第二题，读题</p></li><li><p>贪心算法，目标是统计兔子【可能有没回答的】的最小数量</p></li><li><p>不同颜色的兔子可能会给出相同的答案</p></li><li><p>$\frac{x+y-1}{y}$ 代替 <code>ceil</code> 函数进行向上取整操作</p></li><li><p>python Counter 类真的好用</p></li></ul><h4 id="2-88-合并两个有序数组"><a href="#2-88-合并两个有序数组" class="headerlink" title="2. 88 - 合并两个有序数组"></a>2. <a href="https://leetcode-cn.com/problems/merge-sorted-array/">88 - 合并两个有序数组</a></h4><ul><li><p>双指针，每个指针指向一个数组</p></li><li><p>第一种方法，合并后排序，$O((m+n)log(m+n))$ 时间</p></li><li><p>第二种方法，正序指针，$O(m+n)$ 时间，$O(m+n)$ 空间</p></li><li><p>第三种方法，倒序指针，$O(m+n)$ 时间，$O(1)$ 空间</p></li></ul><h4 id="3-80-删除有序数组中的重复项-II"><a href="#3-80-删除有序数组中的重复项-II" class="headerlink" title="3. 80 - 删除有序数组中的重复项 II"></a>3. <a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array-ii/">80 - 删除有序数组中的重复项 II</a></h4><ul><li><p>原地算法</p></li><li><p>双指针</p></li><li><p>解法一，使用一个 index 变量来表示</p><ul><li>使用 del 函数直接删除元素，很慢</li><li>注意写代码过程中的下标检查</li></ul></li><li><p>解法二，使用快慢指针进行复制</p><ul><li>fast 指针代表已经扫过的区域</li><li>slow 指针代表确定排序的区域</li><li>最终返回的数组长度为 slow 指向的 index</li><li>速度提升一倍</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2103 LeetCode</title>
      <link href="2021-03-08/2103-leetcode/"/>
      <url>2021-03-08/2103-leetcode/</url>
      
        <content type="html"><![CDATA[<h4 id="1-303-区域和检索-数组不可变"><a href="#1-303-区域和检索-数组不可变" class="headerlink" title="1. 303 - 区域和检索 - 数组不可变"></a>1. <a href="https://leetcode-cn.com/problems/range-sum-query-immutable">303 - 区域和检索 - 数组不可变</a></h4><ul><li>前缀和</li><li>注意数组首元素是否为 0 时，具有不同的含义，有时可以为计算带来简便</li><li>重复调用时，可以使用懒计算</li></ul><h4 id="2-304-二维区域和检索-矩阵不可变"><a href="#2-304-二维区域和检索-矩阵不可变" class="headerlink" title="2. 304 - 二维区域和检索 - 矩阵不可变"></a>2. <a href="https://leetcode-cn.com/problems/range-sum-query-2d-immutable/">304 - 二维区域和检索 - 矩阵不可变</a></h4><ul><li>python 二维数组初始化时，避免浅拷贝，数组引用会带来值修改问题</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">g <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">]</span> <span class="token operator">*</span> n <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>快速子矩阵求和与 DP 的二维数组含义的配合</li></ul><h4 id="3-338-比特位计数"><a href="#3-338-比特位计数" class="headerlink" title="3. 338 - 比特位计数"></a>3. <a href="https://leetcode-cn.com/problems/counting-bits/">338 - 比特位计数</a></h4><ul><li>位运算计算的奇技淫巧：与 DP 结合快速计算数字二进制形式 1 的个数</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">bits<span class="token punctuation">.</span>append<span class="token punctuation">(</span>bits<span class="token punctuation">[</span>i <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="4-354-俄罗斯套娃信封问题"><a href="#4-354-俄罗斯套娃信封问题" class="headerlink" title="4. 354 - 俄罗斯套娃信封问题"></a>4. <a href="https://leetcode-cn.com/problems/russian-doll-envelopes/">354 - 俄罗斯套娃信封问题</a></h4><ul><li>题目要求严格大于，在进行预排序的时候，第一维升维，第二维降维</li><li>python 排序</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">envelopes<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="5-232-用栈实现队列"><a href="#5-232-用栈实现队列" class="headerlink" title="5. 232 - 用栈实现队列"></a>5. <a href="https://leetcode-cn.com/problems/implement-queue-using-stacks">232 - 用栈实现队列</a></h4><ul><li>摊销复杂度 【最近总遇到摊销两字，看论文的时候“摊销因果发现”】</li><li>只在 pop 栈出队列为空的时候进行转移</li></ul><h4 id="6-503-下一个更大元素-II"><a href="#6-503-下一个更大元素-II" class="headerlink" title="6. 503 - 下一个更大元素 II"></a>6. <a href="https://leetcode-cn.com/problems/next-greater-element-ii">503 - 下一个更大元素 II</a></h4><ul><li>使用栈只保留 index，不用存具体数据</li><li>单调栈应用在找寻循环数组的下一个更大元素</li></ul><h4 id="7-131-分割回文串"><a href="#7-131-分割回文串" class="headerlink" title="7. 131 - 分割回文串"></a>7. <a href="https://leetcode-cn.com/problems/palindrome-partitioning/">131 - 分割回文串</a></h4><ul><li>DP + 深搜 基础题</li><li>初始化 map 为全 True 和 全 False 在后续初始化中具有很大 区别<ul><li>如果初始化为全 False<ul><li>计算长度为 1 的</li><li>计算长度为 2 的</li><li>计算长度更长的序列时候，range 的起始为 2；if 的判断条件有 3 个 【防溢出，首尾字母，中间字符串】<pre class="line-numbers language-python" data-language="python"><code class="language-python">_map <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    _map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> s<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        _map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">+</span> j <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">and</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> s<span class="token punctuation">[</span>i<span class="token operator">+</span>j<span class="token punctuation">]</span> <span class="token keyword">and</span> _map<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">+</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            _map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">+</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li>如果初始化为全 True<ul><li>计算长度为 1 的</li><li>计算更长长度的字符串的时候，可以倒序计算；长度为 2 的情况因为初始化为 True 不需要单独列出<pre class="line-numbers language-python" data-language="python"><code class="language-python">g <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">]</span> <span class="token operator">*</span> n <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>        g<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> g<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li></ul><h4 id="8-132-分割回文串-II"><a href="#8-132-分割回文串-II" class="headerlink" title="8. 132 - 分割回文串 II"></a>8. <a href="https://leetcode-cn.com/problems/palindrome-partitioning-ii">132 - 分割回文串 II</a></h4><ul><li>考虑清楚第二次 DP 的表的物理含义，不用深搜，否则超时<ul><li>前 i 个字符最多需要分割多少次得到回文串子集</li></ul></li><li>初始化时注意观察整个字符串是不是回文串</li><li>初始化为最大值</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">f <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">"inf"</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">*</span> n<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 基础命令介绍</title>
      <link href="2021-03-04/hello-world/"/>
      <url>2021-03-04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 <a href="https://hexo.io/">Hexo</a>！ 这是你的第一篇文章。访问 <a href="https://hexo.io/docs/">documentation</a> 来了解更多信息。<br>在使用 Hexo 的过程中如果你遇到了任何的问题，你可以在 <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> 找到答案，<br>或者你可以在 <a href="https://github.com/hexojs/hexo/issues">GitHub</a> 进行提问。</p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更多信息，请访问: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="运行本地服务器"><a href="#运行本地服务器" class="headerlink" title="运行本地服务器"></a>运行本地服务器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server$ hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>更多信息，请访问: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="生成静态网页文件"><a href="#生成静态网页文件" class="headerlink" title="生成静态网页文件"></a>生成静态网页文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate$ hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>更多信息，请访问: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="部署到远端网站"><a href="#部署到远端网站" class="headerlink" title="部署到远端网站"></a>部署到远端网站</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy$ hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>更多信息，请访问: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="写作技巧"><a href="#写作技巧" class="headerlink" title="写作技巧"></a>写作技巧</h2><h3 id="插入站内文章链接"><a href="#插入站内文章链接" class="headerlink" title="插入站内文章链接"></a>插入站内文章链接</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">{</span>% post_link <span class="token punctuation">[</span>文章文件名（不要后缀）<span class="token punctuation">]</span> <span class="token punctuation">[</span>文章标题（可选）<span class="token punctuation">]</span> %<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><ol><li>安装 <code>hexo-asset-image</code></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-asset-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>更新 <code>_config.yaml</code></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">post_asset_folder: <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>更新 <code>/node_modules/hexo-asset-image/index.js</code> 中的代码，详情请见链接</li></ol><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token string">"use strict"</span><span class="token punctuation">;</span><span class="token keyword">var</span> cheerio <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"cheerio"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span><span class="token keyword">function</span> <span class="token function">getPosition</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> m<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> version <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>hexo<span class="token punctuation">.</span>version<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>filter<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">"after_post_render"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> config <span class="token operator">=</span> hexo<span class="token punctuation">.</span>config<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>post_asset_folder<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> link <span class="token operator">=</span> data<span class="token punctuation">.</span>permalink<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>version<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">Number</span><span class="token punctuation">(</span>version<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span>      <span class="token keyword">var</span> beginPos <span class="token operator">=</span> <span class="token function">getPosition</span><span class="token punctuation">(</span>link<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">var</span> beginPos <span class="token operator">=</span> <span class="token function">getPosition</span><span class="token punctuation">(</span>link<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">// In hexo 3.1.1, the permalink of "about" page is like ".../about/index.html".</span>    <span class="token keyword">var</span> endPos <span class="token operator">=</span> link<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    link <span class="token operator">=</span> link<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>beginPos<span class="token punctuation">,</span> endPos<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> toprocess <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"excerpt"</span><span class="token punctuation">,</span> <span class="token string">"more"</span><span class="token punctuation">,</span> <span class="token string">"content"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> toprocess<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">var</span> key <span class="token operator">=</span> toprocess<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> $ <span class="token operator">=</span> cheerio<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        ignoreWhitespace<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        xmlMode<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        lowerCaseTags<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        decodeEntities<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token comment">// For windows style path, we replace '\' to '/'.</span>          <span class="token keyword">var</span> src <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"\\"</span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">http[s]*.*|\/\/.*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\s*\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// For "about" page, the first part of "src" can't be removed.</span>            <span class="token comment">// In addition, to support multi-level local directory.</span>            <span class="token keyword">var</span> linkArray <span class="token operator">=</span> link<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">elem</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> elem <span class="token operator">!=</span> <span class="token string">""</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> srcArray <span class="token operator">=</span> src<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">elem</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> elem <span class="token operator">!=</span> <span class="token string">""</span> <span class="token operator">&amp;&amp;</span> elem <span class="token operator">!=</span> <span class="token string">"."</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>srcArray<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> srcArray<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            src <span class="token operator">=</span> srcArray<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>root <span class="token operator">+</span> link <span class="token operator">+</span> src<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span>info <span class="token operator">&amp;&amp;</span>              console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"update link as:--&gt;"</span> <span class="token operator">+</span> config<span class="token punctuation">.</span>root <span class="token operator">+</span> link <span class="token operator">+</span> src<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>          console<span class="token punctuation">.</span>info <span class="token operator">&amp;&amp;</span> console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"no src attr, skipped..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          console<span class="token punctuation">.</span>info <span class="token operator">&amp;&amp;</span> console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      data<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>使用 <code>create</code> 命令时自动创建同名文件夹用于存储图片</li></ol><p>More info: <a href="https://www.jianshu.com/p/f72aaad7b852">Pictures</a></p>]]></content>
      
      
      <categories>
          
          <category> Engineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
